<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">


	<http pattern="/static/**" security="none" />
	<http pattern="/commons/**" security="none" />
	<http pattern="/login" security="none" />

	<http auto-config="true" use-expressions="true" authentication-manager-ref="authenticationManager">
		<intercept-url pattern="/**" access="isAuthenticated()" />
		<!-- authentication-failure-handler-ref="loginFailListener"  authentication-failure-url="/login" -->
		<form-login login-page="/login" login-processing-url="/checkLogin" authentication-failure-url="/login" authentication-success-handler-ref="loginSuccessListener" />
		<logout logout-url="/logout" delete-cookies="JSESSIONID" invalidate-session="true" success-handler-ref="logoutSuccessListener" />
		<csrf disabled="true" />
		<remember-me token-validity-seconds="1209600" remember-me-parameter="_spring_security_remember_me" key="e37f4b31-0c45-11dd-bd0b-0800200c9a66" />
		<session-management invalid-session-url="/login">
			<concurrency-control error-if-maximum-exceeded="true" max-sessions="1" />
		</session-management>
	</http>

	<!-- 认证管理器 -->
	<beans:bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager"> 
		<beans:constructor-arg> 
			<beans:list> 
				<beans:ref bean="daoAuthenticationProvider"/> 
				<beans:ref bean="rememberMeAuthenticationProvider" /> 
			</beans:list> 
		</beans:constructor-arg> 
	</beans:bean>

	<!-- 登录认证处理 -->
	<beans:bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<!-- 是否显示用戶名不存在信息 false显示 true不显示 -->
        <beans:property name="hideUserNotFoundExceptions" value="false"/>
		<beans:property name="userDetailsService" ref="userDetailsService" />
		<!-- 密码加密 -->
		<beans:property name="passwordEncoder" ref="md5Encoder"/>
    </beans:bean>
	
	<!-- 密码配置加密盐值 -->
    <beans:bean id="md5Encoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />
    
    <!-- 用户名配置加密盐值 -->
	<beans:bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource">
		<beans:property name="userPropertyToUse" value="username" />
	</beans:bean>

	<beans:bean id="rememberMeAuthenticationProvider" class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
		<beans:constructor-arg name="key" value="spring-security-integration" />
	</beans:bean>
	<beans:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<beans:property name="basenames" value="classpath:messages_zh_CN" />
	</beans:bean>

</beans:beans>